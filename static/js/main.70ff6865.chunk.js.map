{"version":3,"sources":["media/Background.JPG","components/navbar.js","components/home.js","App.js","index.js"],"names":["module","exports","Navbar","verticalStyle","width","height","position","zIndex","margin","display","flexDirection","textAlign","justifyContent","fontFamily","color","borderRadius","backgroundColor","midFontSize","fontSize","iconStyle","useState","currentPage","setCurrentPage","isHome","setIsHome","onLinkClick","page","style","gridTemplateColumns","borderStyle","marginTop","fontWeight","gridColumn","justifySelf","marginLeft","toUpperCase","ButtonGroup","orientation","size","Button","variant","disabled","onClick","marginBottom","Link","target","href","Home","container","margiRight","alignItems","opacity","App","background","src","Background","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ff6865.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Background.9db088d5.JPG\";","import React, { useState } from 'react'\nimport Container from './container.js'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Link from '@material-ui/core/Link'\nimport FacebookIcon from '@material-ui/icons/Facebook'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport InstagramIcon from '@material-ui/icons/Instagram'\nimport '../App.css'\n\n// Can use useMemo here, and make it update when the global value \"activePage\" changes (implemented eventually)\nconst Navbar = () => {\n  // Different styles for vertical/horizontal navbar\n  const verticalStyle = {\n    width: '16%',\n    height: '92%',\n    position: 'fixed',\n    zIndex: 2,\n    margin: '2% 0 2% 2%',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    justifyContent: 'space-between',\n    fontFamily: 'Acme, cursive',\n    color: 'white',\n    borderRadius: '15px',\n    backgroundColor: `rgb(${[10,10,10,0.7]})`,\n  }\n  const horizontalStyle = {\n    width: '96%',\n    height: '10%',\n    position: 'fixed',\n    zIndex: 2,\n    margin: '2% 2% 0 2%',\n    display: 'grid',\n    gridTemplateColumns: '60% 40%',\n    fontFamily: 'Acme, cursive',\n    borderStyle: 'solid',\n    borderRadius: '15px',\n  }\n\n  // Header style\n  const verticalHeader = {\n    marginTop: '3vw',\n    fontSize: '3.5vw',\n    fontWeight: 'bold'\n  }\n  const horizontalHeader = {\n    fontSize: '3vw',\n    fontWeight: 'bold',\n    gridColumn: 1,\n    justifySelf: 'left',\n    marginLeft: '3vw'\n  }\n\n  const midFontSize = {fontSize: '2.2vw'}\n\n  // Footer style\n  const footer = {marginBottom: '3vw'}\n  const iconStyle = {width: '1.7em', height: '1.7em'}\n\n  const [currentPage, setCurrentPage] = useState('home')\n  const [isHome, setIsHome] = useState(true)\n  const onLinkClick = (page) => {\n    setCurrentPage(page)\n    setIsHome(page === 'home')\n  }\n\n  // TODO:\n  // const click = (page) => { localStorage.setItem('currentPage', page)}\n  // Må følgelig initialisere page basert på localStorage.getItem('currentPage')\n\n  // TODO:\n  // Create a component for Link (customLink?) which gathers all common code (everything except onClick). Use a prop (called type) to specify page type\n\n  // Noe i denne dur? onHover={() => style={scale: 1.1}}\n  return (\n    <div style={currentPage === 'home' ? verticalStyle : horizontalStyle}>\n        <h1 style={isHome ? verticalHeader : horizontalHeader}> {currentPage.toUpperCase()} </h1>\n\n        <ButtonGroup orientation={isHome ? 'vertical' : 'horisontal'} color=\"inherit\" size='large'>\n          { isHome || <Button style={midFontSize} variant='text' color='inherit' disabled={currentPage === 'home'} onClick={() => onLinkClick('home')}> Home </Button> }\n          <Button style={midFontSize} variant='text' color='inherit' disabled={currentPage === 'about'} onClick={() => onLinkClick('about')}> About </Button>\n          <Button style={midFontSize} variant='text' color='inherit' disabled={currentPage === 'portfolio'} onClick={() => onLinkClick('portfolio')}> Portfolio </Button>\n          <Button style={midFontSize} variant='text' color='inherit' disabled={currentPage === 'blog'} onClick={() => onLinkClick('blog')}> Blog </Button>\n        </ButtonGroup>\n\n        { isHome &&\n          <div style={footer}>\n            <Link style={{color: 'white'}} target=\"_blank\" href='https://www.facebook.com/martin.stiles.9'> <FacebookIcon style={iconStyle}/> </Link>\n            <Link style={{color: 'white', margin: '0 10% 0 10%'}} target=\"_blank\" href='https://www.linkedin.com/in/martin-stiles-39b662171/'> <LinkedInIcon style={iconStyle} /> </Link>\n            <Link style={{color: 'white'}} target=\"_blank\" href='https://www.instagram.com/msstiles/'> <InstagramIcon style={iconStyle}/> </Link>\n          </div>\n        }\n    </div>\n  )\n}\n\nexport default Navbar\n\n/*\nAUTHORS NOTE\nChoice: keep track of several boolean fro each 'page' or run check operations every render -> Currently: checks every render\n*/","import React from 'react'\n\n// height 50% ??\nconst Home = () => {\n\tconst container = {\n\t\tposition: 'absolute',\n\t\twidth: '50%',\n\t\tmarginTop: '15%',\n\t\tmargiRight: 'auto',\n\t\tmarginLeft: '34%',\n\t\tzIndex: 3,\n\t\ttextAlign: 'center',\n\t\talignItems: 'center',\n\t\tfontWeight: 'bold',\n\t\tbackgroundColor: `rgb(${[10,10,10,0.7]})`,\n\t\tborderRadius: '15px'\n\t}\n\n\treturn (\n\t\t<div style={container}>\n\t\t\t<h1 style={{fontSize: '5vw', color: 'white', opacity: 1}}> MARTIN STILES </h1>\n\t\t\t<p style={{fontSize: '1.5vw', color: 'white', margin: '4vw 2vw'}}> Web developer. Tech enthusiast. Friendly neighborhood spiderman.</p>\n\t\t</div>\n\t)\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar'\nimport Home from './components/home.js'\nimport Background from './media/Background.JPG'\n\n//TODO: Ha en if (ternary) som gir forskjellig main/navbar?\nfunction App() {\n  // background: '#4C6663'\n  const style = {\n    background: 'black',\n    alignItems: 'center'\n  }\n\n  const imageStyle = {\n    width: '100%',\n    height: '100%',\n    opacity: '1',\n    zIndex: 1,\n    position: 'absolute',\n    background: 'black'\n  }\n\n\n  return (\n    <div style={style}>\n      <div>\n        <img style={imageStyle} src={Background} alt='' />\n      </div>\n      <Navbar />\n      <Home />\n    </div>\n  );\n}\n// <div><Home /></div>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}